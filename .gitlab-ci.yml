stages:
  - checks
  - tests
  - release
  - publish_doc

variables:
  DOCKER_IMAGE: "registry.duniter.org/docker/python3/poetry"
  PYTHON_VERSION: "3.8"

image: $DOCKER_IMAGE/$PYTHON_VERSION:latest

.push_to_github:
  tags:
    - github
  after_script:
    # remove all files in current repo
    - rm -rf ./*
    - rm -rf .git*
    # do a mirror clone in current repo
    - git clone --mirror $CI_REPOSITORY_URL .
    # do config for github push
    - git remote add github $GITHUB_URL_AND_KEY
    - git config --global user.email "contact@duniter.org"
    - git config --global user.name "Duniter"
    # remove refs about merge requests
    - bash -c "cat packed-refs | grep -v 'refs/merge-requests' > packed-refs-new; echo 'Removed merge-requests refs.'"
    - mv packed-refs-new packed-refs
    # github push
    - bash -c "git push --force --mirror github 2>&1 | grep -v duniter-gitlab; echo $?"

.changes:
  rules:
    - changes:
      - duniterpy/**/*.py
      - .gitlab-ci.yml
      - Makefile
      - tests/**/*.py
      - pyproject.toml

format:
  extends:
    - .changes
  stage: checks
  script:
    - make check-format

build:
  extends:
    - .changes
  stage: checks
  script:
    - poetry build

type:
  extends:
    - .changes
  stage: checks
  script:
    - make mypy

lint:
  extends:
    - .changes
  stage: tests
  tags: [redshift]
  script:
    - poetry install
    - make pylint

.tests:
  extends: .changes
  stage: tests
  image: $DOCKER_IMAGE/$PYTHON_VERSION:latest
  script:
    - poetry install --no-dev
    - make tests

tests-3.6:
  extends: .tests
  tags: [mille]
  variables:
    PYTHON_VERSION: "3.6"

tests-3.7:
  extends: .tests
  tags: [mille]
  variables:
    PYTHON_VERSION: "3.7"

tests-3.8:
  extends: .tests
  tags: [redshift]

tests-3.9:
  extends: .tests
  tags: [redshift]
  variables:
    PYTHON_VERSION: "3.9"

release:
  extends:
    - .push_to_github
  stage: release
  script:
    - poetry publish --build --username $PYPI_LOGIN --password $PYPI_PASSWORD
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - when: never

release_test:
  stage: release
  script:
    - poetry config repositories.pypi_test https://test.pypi.org/legacy/
    - poetry publish --build --username $PYPI_TEST_LOGIN --password $PYPI_TEST_PASSWORD --repository pypi_test
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: $CI_COMMIT_BRANCH == "dev"
      when: manual
    - when: never

pages:
  stage: publish_doc
  script:
    - poetry install
    - make docs
    - mv docs/_build/html public
    - ls public
  artifacts:
    untracked: true
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - when: never
